{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chips\\\\Documents\\\\GitHub\\\\MovieShop-370-Final\\\\Application\\\\react-postgres\\\\src\\\\pages\\\\movie-search.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport Navbar from '../components/navbar/navbar.js';\nimport { BACKEND_HOST } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [movies, setMovies] = useState([]); //create a react state initialized with an empty array\n  const searchReference = useRef();\n  function handleForm(event) {\n    // when the form is submitted this function gets called\n    event.preventDefault();\n\n    //send a post request to backend- fetch returns a promise\n    //Promises help with asynchronous operations\n    fetch(`${BACKEND_HOST}/movies/search`, {\n      //customizing the request for the backend\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: searchReference.current.value\n      })\n    }).then(response => response.json()).then(results => setMovies(results));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleForm,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"search for movies\",\n        ref: searchReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_s(MovieSearch, \"r2Bi0eOx8FhQ/KsE4gnw9LNOPjw=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["useRef","useState","Navbar","BACKEND_HOST","MovieSearch","movies","setMovies","searchReference","handleForm","event","preventDefault","fetch","method","headers","body","JSON","stringify","title","current","value","then","response","json","results","map","movie"],"sources":["C:/Users/chips/Documents/GitHub/MovieShop-370-Final/Application/react-postgres/src/pages/movie-search.js"],"sourcesContent":["import {useRef, useState} from \"react\";\nimport Navbar from '../components/navbar/navbar.js';\nimport {BACKEND_HOST} from \"../config\";\n\nconst MovieSearch = () => {\n    const [movies, setMovies] = useState([]); //create a react state initialized with an empty array\n    const searchReference = useRef();\n\n    function handleForm(event) { // when the form is submitted this function gets called\n        event.preventDefault();\n\n        //send a post request to backend- fetch returns a promise\n        //Promises help with asynchronous operations\n        fetch(`${BACKEND_HOST}/movies/search`, { //customizing the request for the backend\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                title: searchReference.current.value\n            })\n        }).then(response => response.json())\n            .then(results => setMovies(results));\n    }\n\n    return <div>\n        <Navbar/>\n        <form onSubmit={handleForm}> {/*submits whole form -- sends it line 8 to exicute function*/}\n            <input type=\"search\" placeholder=\"search for movies\" ref={searchReference}/>\n            <button type=\"submit\">Search</button>\n        </form>\n        <ol>\n            {movies.map(movie =>\n                <li>{movie.title}</li>)}\n        </ol>\n    </div>;\n};\n\nexport default MovieSearch;"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAAQC,YAAY,QAAO,WAAW;AAAC;AAEvC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAMM,eAAe,GAAGP,MAAM,EAAE;EAEhC,SAASQ,UAAU,CAACC,KAAK,EAAE;IAAE;IACzBA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA;IACAC,KAAK,CAAE,GAAER,YAAa,gBAAe,EAAE;MAAE;MACrCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,KAAK,EAAEV,eAAe,CAACW,OAAO,CAACC;MACnC,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAC/BF,IAAI,CAACG,OAAO,IAAIjB,SAAS,CAACiB,OAAO,CAAC,CAAC;EAC5C;EAEA,oBAAO;IAAA,wBACH,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT;MAAM,QAAQ,EAAEf,UAAW;MAAA,6BACvB;QAAO,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC,mBAAmB;QAAC,GAAG,EAAED;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5E;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACP;MAAA,UACKF,MAAM,CAACmB,GAAG,CAACC,KAAK,iBACb;QAAA,UAAKA,KAAK,CAACR;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AACV,CAAC;AAAC,GAhCIb,WAAW;AAAA,KAAXA,WAAW;AAkCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}